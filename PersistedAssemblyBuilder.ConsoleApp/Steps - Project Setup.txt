::=============================================================================================================================================
How To Fix OmniSharp Error: The SDK 'Microsoft.NET.Sdk' specified could not be found.  
::=============================================================================================================================================

[fail]: OmniSharp.MSBuild.ProjectManager
        Failed to load project file '{projectFilePath}'.
Microsoft.Build.Exceptions.InvalidProjectFileException: The SDK 'Microsoft.NET.Sdk' specified could not be found.  

1. In the bash terminal, run cat ~/.vscode-remote/data/Machine/settings.json. 

2. Make sure this is in the settings.json file:

{
  "omnisharp.path": "latest"
}

3. If it's not, edit it using nano and include it:

nano ~/.vscode-remote/data/Machine/settings.json

4. Save it. Current menu for saving edits is Ctrl + X.

5. It will prompt you to restart OmniSharp. Go ahead and restart it.

::=============================================================================================================================================
How To Fix OmniSharp Error: mono command not found
::=============================================================================================================================================

OmniSharp server started.
    Path: /home/vscode/.vscode-remote/extensions/ms-dotnettools.csharp-1.23.16/.omnisharp/1.39.12-beta.30/run
    PID: 29657

/home/vscode/.vscode-remote/extensions/ms-dotnettools.csharp-1.23.16/.omnisharp/1.39.12-beta.30/run: line 19: mono: command not found

1. Run these commands in the bash terminal:
    1.1. Update Package List:
    sudo apt update

    1.2. Install Dependencies: Install the necessary dependencies to add a new repository over HTTPS
    sudo apt install dirmngr gnupg apt-transport-https ca-certificates software-properties-common

    1.3. Add Mono Repository: 
        1.3.1. Import the repository’s GPG key
        sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF

        1.3.2. Add the Mono repository to your system sources list:
        sudo apt-add-repository 'deb https://download.mono-project.com/repo/ubuntu stable-focal main'

    1.4. Install Mono:
        Install Mono using the following command:
        sudo apt install mono-complete

    1.5. Verify Installation:
        Check that Mono is installed correctly by running:
        mono --version

::=============================================================================================================================================
How To Fix OmniSharp Error: mono command not found. Error: OmniSharp server load timed out. 
::=============================================================================================================================================
/home/vscode/.vscode-remote/extensions/ms-dotnettools.csharp-1.23.16/.omnisharp/1.39.12-beta.30/run: line 19: mono: command not found
[ERROR] Error: OmniSharp server load timed out. Use the 'omnisharp.projectLoadTimeout' setting to override the default delay (one minute).        

1. Repeat the same commands as the steps above in the bash terminal:
    1.1. Update Package List:
    sudo apt update

    1.2. Install Dependencies: Install the necessary dependencies to add a new repository over HTTPS
    sudo apt install dirmngr gnupg apt-transport-https ca-certificates software-properties-common

    1.3. Add Mono Repository: 
        1.3.1. Import the repository’s GPG key
        sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF

        1.3.2. Add the Mono repository to your system sources list:
        sudo apt-add-repository 'deb https://download.mono-project.com/repo/ubuntu stable-focal main'

    1.4. Install Mono:
        Install Mono using the following command:
        sudo apt install mono-complete

    1.5. Verify Installation:
        Check that Mono is installed correctly by running:
        mono --version
    
    1.6. Check the Path environment variable:
        echo $PATH


::=============================================================================================================================================
How To Fix Error: Unable to find package Blazor.Tools.BlazorBundler.Entities.SampleObjects.Data.
::=============================================================================================================================================

error NU1101: Unable to find package Blazor.Tools.BlazorBundler.Entities.SampleObjects.Data. No packages exist with this id in source(s): nuget.org

1. In the bash terminal, run:

 dotnet remove PersistedAssemblyBuilder.ConsoleApp/PersistedAssemblyBuilder.ConsoleApp.csproj package Blazor.Tools.BlazorBundler
 dotnet add PersistedAssemblyBuilder.ConsoleApp/PersistedAssemblyBuilder.ConsoleApp.csproj package Blazor.Tools.BlazorBundler

::=============================================================================================================================================
How To Build this project.
::=============================================================================================================================================
$env:PackageVersion="3.1.18"
dotnet build --verbosity detailed /p:PackageVersion=$env:PackageVersion /p:Configuration="Release" /p:AssemblyVersion=$env:PackageVersion /p:FileVersion=$env:PackageVersion /p:Version=$env:PackageVersion

::=============================================================================================================================================
How To Setup the Tools Module
::=============================================================================================================================================

In bash:
which pswh
export PATH=$PATH:/usr/bin/pwsh
export NugetApiKey="YOUR_API_KEY" >> ~/.bashrc

in pwsh:
/usr/bin/pwsh -ExecutionPolicy Bypass -File "PersistedAssemblyBuilder.ConsoleApp/BlazorBundler/Get-Tools.ps1"
